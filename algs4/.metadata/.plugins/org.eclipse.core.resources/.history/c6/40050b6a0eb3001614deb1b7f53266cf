import java.security.PublicKey;

import edu.princeton.cs.algs4.StdIn;
import edu.princeton.cs.algs4.StdOut;

public class UF {

	/**
	 * UF(int n) initialize N sites with integer names(0 to n-1)
	 * void union(int p,int q) add connection between p and q 
	 * int find(int p ) component idertifier for p(0 to n-1)
	 * boolean connected(int p,int q) return true if p and q are same componnet
	 * int count() number of component
	 * @param args
	 */
	private int[] id ;//id ararry declaration 
	private int count;
	public  UF(int n) {
		count=n;
		id =new int[n];//id ararry creation
		for (int i = 0; i < id.length; i++) {
			id[i]=i; //id ararry initialzition
		}
	}
	public int count() {
		return count;
		
	}
	public int find(int p) {
		return id[p];
	}
	public void union(int p,int q) {
		int pid= find(p);
		int qid= find(q);
		if (pid==qid) return ;
		for (int i = 0; i < id.length; i++) {
			if(pid==id[i]) id[i]=qid;
			count--;
		}
		
		
	}
	public boolean connected(int p,int q) {
		return find(p)==find(q);		
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int n=StdIn.readInt();
		UF uf = new UF(n);
		while (!StdIn.isEmpty()) {
			int p = StdIn.readInt();
			int q = StdIn.readInt();
			if(uf.connected(p, q)) continue;
			uf.union(p, q);
		//	StdOut.println(p+" "+q);
		}
		
	StdOut.println(uf.count()+" components");
	}

}
